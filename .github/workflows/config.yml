name: GO CI
on: push
env:
  docker_username: ${{ secrets.DOCKER_USERNAME }}
  docker_password: ${{ secrets.DOCKER_PASSWORD }}
  GIT_COMMIT: ${{ github.sha }}

jobs:
  Clone:
    runs-on: ubuntu-latest
    steps:
      - name: clone-down
        uses: actions/checkout@v2
      - name: Upload backend
        uses: actions/upload-artifact@v2
        with: 
          name: backend
          path: backend
      - name: Upload frontend
        uses: actions/upload-artifact@v2
        with: 
          name: frontend
          path: frontend
      - name: Upload sh_tests
        uses: actions/upload-artifact@v2
        with: 
          name: shell_tests
          path: shell_tests

  Build_backend:
    runs-on: ubuntu-latest
    needs: [Clone]
    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.4
      - name: retrive backend
        uses: actions/download-artifact@v2
        with: 
          name: backend
          path: .
      - name: Build backend
        run: go build .
      - name: Upload backend_build
        uses: actions/upload-artifact@v2
        with: 
          name: backend_build
          path: .

  Build_frontend:
    runs-on: ubuntu-latest
    needs: [Clone]
    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.4
      - name: retrive frontend
        uses: actions/download-artifact@v2
        with: 
          name: frontend
          path: .
      - name: Build frontend
        run: go build .
      - name: Upload frontend_build
        uses: actions/upload-artifact@v2
        with: 
          name: frontend_build
          path: .

  Frontend_pre_test:
    runs-on: ubuntu-latest
    needs: [Build_frontend]
    steps:
      - name: Retrive frontend_build
        uses: actions/download-artifact@v2
        with: 
          name: frontend_build
          path: .
      - name: Test
        run: go test
  
  Docker-image-backend:
    runs-on: ubuntu-latest
    needs: [Frontend_pre_test]
    steps:
      - name: Download Repo
        uses: actions/download-artifact@v2
        with:
          name: backend
          path: .
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: go/backend:latest

  Docker-image-frontend:
    runs-on: ubuntu-latest
    needs: [Frontend_pre_test]
    steps:
      - name: Download Repo
        uses: actions/download-artifact@v2
        with:
          name: frontend
          path: .
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: go/frontend:latest

  Run_both_apps:
    runs-on: jedie20
    needs: [Frontend_pre_test, Build_backend]
    steps:
      - name: mkdir test
        run: mkdir shell_tests
      - name: Retrive tests
        uses: actions/download-artifact@v2
        with: 
          name: shell_tests
          path: ./shell_tests
      - name: Retrive frontend_build
        uses: actions/download-artifact@v2
        with: 
          name: frontend_build
          path: .
      - name: Retrive backend_build
        uses: actions/download-artifact@v2
        with: 
          name: backend_build
          path: .
      - name: redigo dependency
        run: sudo apt install redis-server
      - name: redis status
        run: sudo systemctl status redis
      - name: Run backend
        run: go run backend &
      - name: Run frontend
        run: go run frontend &
      - name: Test frontend respone
        run: |
          chmod +x shell_tests/demo.sh
          shell_tests/demo.sh
      - name: Upload code
        uses: actions/upload-artifact@v2
        with:
          name: code
          path: .

      