name: GO CD
on: 
  create: 
    branches:
      - 'main'
    tags:
      - '**'
jobs:
  Test-Code:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16'

      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Run unit test
        run: |
          cd ${GITHUB_WORKSPACE}/frontend
          go test util.go main.go main_test.go

      - name: Build backend
        run: |
          cd ${GITHUB_WORKSPACE}/backend
          go build .

      - name: Build frontend
        run: |
          cd ${GITHUB_WORKSPACE}/frontend
          go build .

      - name: Run backend
        run: |
          cd ${GITHUB_WORKSPACE}/backend
          go run backend &

      - name: Run frontend
        run: |
          cd ${GITHUB_WORKSPACE}/frontend
          go run frontend &

      - name: Upload code
        uses: actions/upload-artifact@v2
        with:
          name: code
          path: .

  Docker-Image:
    runs-on: ubuntu-latest
    needs: Test-Code
    steps:
      - name: Download code
        uses: actions/download-artifact@v2
        with:
          name: code
          path: . 

      - name: Get & Run Backend Image
        run: docker run jedie20/go_backend:latest
        env:
          docker_id: ${{secrets.DOCKER_USERNAME}}
          docker_image: go_backend:latest
          docker_port: 9000

      - name: Get & Run Frontend Image
        run: docker run jedie20/go_backend:latest
        env:
          docker_id: ${{secrets.DOCKER_USERNAME}}
          docker_image: go_frontend:latest
          docker_port: 8080

      - name: Push Backend Image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{env.docker_username}}/go_backend:latest

      - name: Push Frontend Image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{env.docker_username}}/go_frontend:latest
  
  Test-Kubernetes:
    runs-on: self-hosted
    needs: Docker-Image
    steps:
      - name: Set Vars
        id: vars
        run: |
          echo "::set-output name=version::${GITHUB_REF#refs/tags/}"
          echo "::set-output name=revision::${GITHUB_SHA}"

      - name: Download code
        uses: actions/download-artifact@v2
        with:
          name: code
          path: . 

      - name: removing existing services and deployments
        run: |
          chmod +x ${GITHUB_WORKSPACE}/scripts/remove_kubernetes.sh
          ${GITHUB_WORKSPACE}/scripts/remove_kubernetes.sh
          export docker_image=${docker_image2}
          ${GITHUB_WORKSPACE}/scripts/remove_kubernetes.sh
        env:
          docker_image: go_backend
          docker_image2: go_frontend
          docker_run_id: ${{ github.run_id }}-${{ github.run_number }}

      - name: Runing Backend
        run: |
          chmod +x ${GITHUB_WORKSPACE}/scripts/run_kubernetes.sh
          ${GITHUB_WORKSPACE}/scripts/run_kubernetes.sh
        env:
          docker_id: ${{secrets.DOCKER_HUB_ID}}
          docker_image: go_backend
          docker_tag: ${{ steps.vars.outputs.version }}
          docker_run_id: ${{ github.run_id }}-${{ github.run_number }}
          docker_port: 9000

      - name: Runing Frontend
        run: |
          chmod +x ${GITHUB_WORKSPACE}/scripts/run_kubernetes.sh
          ${GITHUB_WORKSPACE}/scripts/run_kubernetes.sh
        env:
          docker_id: ${{secrets.DOCKER_HUB_ID}}
          docker_image: go_frontend
          docker_tag: ${{ steps.vars.outputs.version }}
          docker_run_id: ${{ github.run_id }}-${{ github.run_number }}
          docker_port: 8080

      - name: Remove Backend Test
        run: |
          chmod +x ${GITHUB_WORKSPACE}/scripts/remove_kubernetes.sh
          ${GITHUB_WORKSPACE}/scripts/remove_kubernetes.sh
        env:
          docker_image: go_backend
          docker_run_id: ${{ github.run_id }}-${{ github.run_number }}

      - name: Remove Frontend Test
        run: |
          chmod +x ${GITHUB_WORKSPACE}/scripts/remove_kubernetes.sh
          ${GITHUB_WORKSPACE}/scripts/remove_kubernetes.sh
        env:
          docker_image: go_frontend
          docker_run_id: ${{ github.run_id }}-${{ github.run_number }}

      - name: Deploy
        run: |
          chmod +x ${GITHUB_WORKSPACE}/scripts/deploy.sh
          ${GITHUB_WORKSPACE}/scripts/deploy.sh
        env:
          docker_tag: ${{ steps.vars.outputs.version }}