name: GO CD
on: push

jobs:
  Test-Kubernetes:
    runs-on: self-hosted
    steps:
      - name: Set Variables
        id: vars
        run: |
          echo "::set-output name=version::${GITHUB_REF#refs/tags/}"
          echo "::set-output name=revision::${GITHUB_SHA}"

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Cleanup test enviromments
        run: |
          chmod +x ${GITHUB_WORKSPACE}/scripts/cleanupTestEnvironment.sh
          ${GITHUB_WORKSPACE}/scripts/cleanupTestEnvironment.sh
          export docker_image=${second_docker_image}
          ${GITHUB_WORKSPACE}/scripts/cleanupTestEnvironment.sh
        env:
          docker_image: go_backend
          second_docker_image: go_frontend
          docker_run_id: ${{ github.run_id }}-${{ github.run_number }}

      - name: Run Backend in test environment
        run: |
          chmod +x ${GITHUB_WORKSPACE}/scripts/run_kubernetes.sh
          ${GITHUB_WORKSPACE}/scripts/run_kubernetes.sh
        env:
          docker_id: jedie20
          docker_image: go_backend
          docker_tag: ${{ steps.vars.outputs.version }}
          docker_run_id: ${{ github.run_id }}-${{ github.run_number }}
          docker_port: 9000

      - name: Run Frontend in test environment
        run: |
          chmod +x ${GITHUB_WORKSPACE}/scripts/run_kubernetes.sh
          ${GITHUB_WORKSPACE}/scripts/run_kubernetes.sh
        env:
          docker_id: jedie20
          docker_image: go_frontend
          docker_tag: ${{ steps.vars.outputs.version }}
          docker_run_id: ${{ github.run_id }}-${{ github.run_number }}
          docker_port: 8080

      - name: Cleanup test environments after scaling, durability etc.
        run: |
          chmod +x ${GITHUB_WORKSPACE}/scripts/cleanupTestEnvironment.sh
          ${GITHUB_WORKSPACE}/scripts/cleanupTestEnvironment.sh
          export docker_image=${second_docker_image}
          ${GITHUB_WORKSPACE}/scripts/cleanupTestEnvironment.sh
        env:
          docker_image: go_backend
          second_docker_image: go_frontend
          docker_run_id: ${{ github.run_id }}-${{ github.run_number }}

      - name: Deploy to production
        run: |
          chmod +x ${GITHUB_WORKSPACE}/scripts/deployToProd.sh
          ${GITHUB_WORKSPACE}/scripts/deployToProd.sh
        env:
          docker_tag: ${{ steps.vars.outputs.version }}